git使用
    1.配置提交人姓名: git config --global user.name 提交人姓名
    2.配置提交人邮箱：git config --global user.email 提交人邮箱
    3.查看git配置信息 git config --list
    如果想进行修改 重复上述配置

git 提交步骤
    1.git init 初始化git仓库
    2.git status 查看文件状态
    3.git add 文件 追踪文件
    4.git commit -m 提交信息 向仓库中提交代码
    5.git log 查看提交记录

git 撤销
    1.用暂存区的文件恢复工作目录中的文件 git checkout 文件
    2.将文件从暂存区中删除 git rm --cached 文件
    3.将git仓库中指定的更新记录恢复出来，并且覆盖暂存区和工作目录 git reset --hard commitID

git 分支命令
    git branch 查看分支
    git branch 分支名称   创建分支
    git checkout 分支名称  切换分支
    git merge 来源分支  合并分支 (必须且换回主分支才能进行合并)
    git branch -d 分支名称 删除分支(分支被合并后才允许删除) (-D强制删除)

git 暂时保存更改
    在git中，可以暂时提取分支上所有的改动并存储，让开发人员得到一个干净的工作副本，临时转向其他工作。
    使用场景：分支临时切换
    存储临时改动: git stash
    恢复改动: git stash pop

git 将代码推送到github
    git push 远程仓库地址 分支名称
    git push 远程仓库地址别名 分支名称
    git push -u 远程仓库地址别名 分支名称
    -u 记住推送地址以及分支，下次推送只需要输入git push 即可
    git remote add 远程仓库地址别名 远程仓库

git 克隆仓库
    克隆远端数据仓库到本地  git clone 仓库地址

git 拉取远程仓库中最新的版本
    拉取远程仓库中最新的版本：git pull 远程仓库地址 分支名称

git ssh 
    生成秘钥 ssh-keygen
    秘钥存储目录 c:/USer/yonghu/.ssh
    公钥名称:id_rsa.pub
    私钥名称:id_rsa

这是怎么回事 啊啊